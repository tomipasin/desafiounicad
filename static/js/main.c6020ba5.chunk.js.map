{"version":3,"sources":["reportWebVitals.js","components/Nav.js","components/CriaRotas.js","components/CriaEntrega.js","App.js","Routes.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Example","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","PersonList","state","persons","directions","origin","destination","axios","get","res","data","setState","this","map","person","nome","entrega","origem","destino","Button","outline","criarRota","console","log","google","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","waypoints","result","status","DirectionsStatus","OK","error","GoogleMapExample","withGoogleMap","defaultCenter","lat","lng","defaultZoom","Table","hover","renderClientes","containerElement","style","height","width","mapElement","Component","CriaEntrega","onChangeNome","e","target","value","onChangeEntrega","onChangeOrigem","onChangeDestino","handleRegister","preventDefault","userObject","name","post","catch","bind","Input","placeholder","type","onChange","App","MapLoader","withScriptjs","googleMapURL","loadingElement","Routes","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6020ba5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\n\nconst Example = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Entregas</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"me-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/CriaEntrega/\">Cadastrar Entrega</NavLink>\n            </NavItem>\n            </Nav>\n          \n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Example;","/*global google*/\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Table, Button } from 'reactstrap';\nimport { withGoogleMap, GoogleMap, DirectionsRenderer, withScriptjs } from \"react-google-maps\";\n\n\nclass PersonList extends Component {\n    state = {\n      persons: [],\n      directions: [],\n      origin: [],\n      destination: [] \n    }\n    \n  \n    componentDidMount() {\n      axios.get(`http://murmuring-shore-51053.herokuapp.com/contatos/`)\n        .then(res => {\n          const persons = res.data;\n          this.setState({ persons });\n          \n        })\n    }\n  \n    renderClientes(){\n      return this.state.persons.map((person) => {\n        const { nome, entrega, origem, destino } = person\n        return (\n          <tr key={nome}>\n            <td>{nome}</td>\n            <td>{entrega}</td>\n            <td>{origem}</td>\n            <td>{destino}</td>\n            <td>\n            <Button outline color=\"danger\" onClick={()=> this.criarRota(origem, destino)}>Criar Rota</Button>              </td>\n          </tr>\n        )\n      })\n    }\n  \n    criarRota(origem, destino){\n      this.state.origin = origem;\n      this.state.destination = destino;   \n      console.log(this.state.origin) \n      console.log(this.state.destination)  \n\n      const directionsService = new google.maps.DirectionsService();\n        directionsService.route(\n            {\n                origin: this.state.origin,\n                destination: this.state.destination,\n                travelMode: google.maps.TravelMode.DRIVING,\n                waypoints: []\n            },\n            (result, status) => {\n                if (status === google.maps.DirectionsStatus.OK) {\n                    console.log(result)\n                    this.setState({\n                        directions: result\n                    });\n                } else {\n                    console.error(`error fetching directions ${result}`);\n                }\n            }\n        );\n\n\n    }\n   \n  \n    render() {\n        const GoogleMapExample = withGoogleMap(props => (\n            <GoogleMap\n                defaultCenter={{ lat: -30.0377, lng: -51.2058 }}\n                defaultZoom={13}\n            >\n                <DirectionsRenderer\n                    directions={this.state.directions}\n                />\n            </GoogleMap>\n        ));\n      return (\n          <div>\n <Table hover>\n        <thead>\n          <tr>\n            <th>Cliente</th>\n            <th>Data da Entrega</th>\n            <th>Or√≠gem</th>\n            <th>Destino</th>\n            <th>Rota</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.renderClientes()}\n        </tbody>\n      </Table>\n      \n      <GoogleMapExample\n                    containerElement={<div style={{ height: `500px`, width: \"100%\" }} />}\n                    mapElement={<div style={{ height: `100%` }} />}\n                />\n\n      \n\n\n          </div>\n       \n      \n\n      )\n    }\n  }\n\n\n\n\n\n\nexport { PersonList };","import React, { useState, useRef, Component } from 'react';\nimport { Input, Button } from 'reactstrap';\nimport axios from \"axios\";\nimport Nav from './Nav';\n\n\n\nclass CriaEntrega extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeNome = this.onChangeNome.bind(this);\n    this.onChangeEntrega = this.onChangeEntrega.bind(this);\n    this.onChangeOrigem = this.onChangeOrigem.bind(this);\n    this.onChangeDestino = this.onChangeDestino.bind(this);\n\n    this.state = {\n      nome: \"\",\n      entrega: \"\",\n      origem: \"\",\n      destino: \"\"\n    }\n  }\n\n  onChangeNome = (e) => {\n    const nome = e.target.value;\n    console.log(this.state.nome)\n    this.setState({ nome: nome });\n  };\n  onChangeEntrega = (e) => {\n    const entrega = e.target.value;\n    console.log(this.state.entrega)\n    this.setState({ entrega: entrega });\n  };\n  onChangeOrigem = (e) => {\n    const origem = e.target.value;\n    console.log(this.state.origem)\n    this.setState({ origem: origem });\n  };\n  onChangeDestino = (e) => {\n    const destino = e.target.value;\n    console.log(this.state.destino)\n    this.setState({ destino: destino });\n  };\n\n  handleRegister = (e) => {\n    e.preventDefault();\n    console.log(this.state.nome, this.state.entrega, this.state.origem, this.state.destino)\n\n    const userObject = {\n      nome: this.state.name,\n      entrega: this.state.entrega,\n      origem: this.state.origem,\n      destino: this.state.destino\n    };\n\n    axios.post('https://murmuring-shore-51053.herokuapp.com/contatos/', userObject)\n      .then((res) => {\n        console.log(res.data)\n      }).catch((error) => {\n        console.log(error)\n      });\n\n    this.setState({\n      nome: \"\",\n      entrega: \"\",\n      origem: \"\",\n      destino: \"\"\n    })\n  }\n\n\nrender() {\n  return (\n    <div className='container'>\n      <Nav />\n      <div>\n        <Input\n          placeholder=\"nome\"\n          type=\"text\"\n          name=\"nome\"\n          value={this.state.nome}\n          onChange={this.onChangeNome}\n        />\n\n        <Input\n          placeholder=\"entrega\"\n          type=\"text\"\n          name=\"entrega\"\n          value={this.state.entrega}\n          onChange={this.onChangeEntrega}\n        />\n\n        <Input\n          placeholder=\"origem\"\n          type=\"text\"\n          name=\"origem\"\n          value={this.state.origem}\n          onChange={this.onChangeOrigem}\n        />\n\n        <Input\n          placeholder=\"destino\"\n          type=\"text\"\n          name=\"destino\"\n          value={this.state.destino}\n          onChange={this.onChangeDestino}\n        />\n\n        <Button color=\"primary\" onClick={this.handleRegister}>Registrar</Button>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default CriaEntrega;","import Nav from './components/Nav'\nimport { PersonList } from './components/CriaRotas';\nimport { withScriptjs } from \"react-google-maps\";\nimport CriaEntrega from './components/CriaEntrega'\n\nfunction App() {\n  const MapLoader = withScriptjs(PersonList);\n  return (\n    <div className='container'>\n      <Nav/>\n      <MapLoader\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBX7wkYYHvJBcAVdA5CkgYu8iGMJvv20V0\"\n      loadingElement={<div style={{ height: `100%` }} />}\n  />\n  <div className='container'>\n   <CriaEntrega /> \n  </div>\n  \n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport App from './App';\nimport CriaEntrega from './components/CriaEntrega';\n\nexport default function Routes() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/criaentrega\" component={CriaEntrega} />\n    </Router>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Routes from './Routes';\n\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}